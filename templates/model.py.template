from datetime import datetime
from typing import Any

from sqlalchemy import BigInteger, DateTime, TextClause${CUSTOM_IMPORTS}
from sqlalchemy.orm import Mapped, mapped_column

from ..prefix.prefix_base import PrefixBase
${ENGINE_IMPORT}


class ${CLASS_NAME}(PrefixBase):
    __incomplete_tablename__ = "${MODEL_NAME}"

    id: Mapped[int] = mapped_column(
        BigInteger,
        primary_key=True,
        index=True,
        autoincrement=True,
    )
    created_at: Mapped[datetime] = mapped_column(
        DateTime(timezone=True),
        server_default=TextClause("CURRENT_TIMESTAMP"),
        nullable=False,
    )
    ${UPDATED_ATTR}
    ${DELETED_ATTR}

    def __repr__(self) -> str:
      return f"<${CLASS_NAME}(id={self.id})>"

    def keys(self) -> list[str]:
      return [column.key for column in self.__table__.columns]

    def __getitem__(self, key) -> Any:
      return getattr(self, key)
